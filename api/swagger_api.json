{
  "openapi": "3.0.4",
  "info": {
    "title": "Telegramus API"
  },
  "paths": {
    "/api/AutoMessages": {
      "get": {
        "tags": [
          "AutoMessages"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMessageDtoIEnumerableOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMessageDtoIEnumerableOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMessageDtoIEnumerableOperationResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AutoMessages"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateAutoMessageRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateAutoMessageRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateAutoMessageRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMessageDtoOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMessageDtoOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMessageDtoOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/AutoMessages/{id}": {
      "get": {
        "tags": [
          "AutoMessages"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMessageDtoOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMessageDtoOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMessageDtoOperationResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AutoMessages"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAutoMessageRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAutoMessageRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAutoMessageRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMessageDtoOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMessageDtoOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMessageDtoOperationResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AutoMessages"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/ChannelRewardsManager": {
      "get": {
        "tags": [
          "ChannelRewardsManager"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelRewardRecordIEnumerableOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelRewardRecordIEnumerableOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelRewardRecordIEnumerableOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/ChannelRewardsManager/local": {
      "get": {
        "tags": [
          "ChannelRewardsManager"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelRewardRecordIEnumerableOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelRewardRecordIEnumerableOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelRewardRecordIEnumerableOperationResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ChannelRewardsManager"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ChannelRewardDefinition"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ChannelRewardDefinition"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ChannelRewardDefinition"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelRewardRecordOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelRewardRecordOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelRewardRecordOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/ChannelRewardsManager/local/{localId}": {
      "get": {
        "tags": [
          "ChannelRewardsManager"
        ],
        "parameters": [
          {
            "name": "localId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelRewardRecordOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelRewardRecordOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelRewardRecordOperationResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ChannelRewardsManager"
        ],
        "parameters": [
          {
            "name": "localId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCustomRewardDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCustomRewardDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCustomRewardDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ChannelRewardsManager"
        ],
        "parameters": [
          {
            "name": "localId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/ChannelRewardsManager/{rewardId}": {
      "get": {
        "tags": [
          "ChannelRewardsManager"
        ],
        "parameters": [
          {
            "name": "rewardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelRewardRecordOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelRewardRecordOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelRewardRecordOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/ChannelRewardsManager/sync": {
      "post": {
        "tags": [
          "ChannelRewardsManager"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/ChannelRewardsManager/sync-services": {
      "post": {
        "tags": [
          "ChannelRewardsManager"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/CinemaQueue": {
      "get": {
        "tags": [
          "CinemaQueue"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaMediaItemDtoListOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaMediaItemDtoListOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaMediaItemDtoListOperationResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CinemaQueue"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateMediaItemRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateMediaItemRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateMediaItemRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaMediaItemDtoOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaMediaItemDtoOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaMediaItemDtoOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/CinemaQueue/{id}": {
      "get": {
        "tags": [
          "CinemaQueue"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaMediaItemDtoOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaMediaItemDtoOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaMediaItemDtoOperationResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CinemaQueue"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateMediaItemRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateMediaItemRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateMediaItemRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaMediaItemDtoOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaMediaItemDtoOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaMediaItemDtoOperationResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CinemaQueue"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/CinemaQueue/next": {
      "get": {
        "tags": [
          "CinemaQueue"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaMediaItemDtoOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaMediaItemDtoOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaMediaItemDtoOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/CinemaQueue/status/{status}": {
      "get": {
        "tags": [
          "CinemaQueue"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "Pending",
                "InProgress",
                "Completed",
                "Cancelled",
                "Postponed"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaMediaItemDtoListOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaMediaItemDtoListOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaMediaItemDtoListOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/CinemaQueue/{id}/mark-as-next": {
      "post": {
        "tags": [
          "CinemaQueue"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/CinemaQueue/{id}/status": {
      "patch": {
        "tags": [
          "CinemaQueue"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "enum": [
                  "Pending",
                  "InProgress",
                  "Completed",
                  "Cancelled",
                  "Postponed"
                ],
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "enum": [
                  "Pending",
                  "InProgress",
                  "Completed",
                  "Cancelled",
                  "Postponed"
                ],
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "enum": [
                  "Pending",
                  "InProgress",
                  "Completed",
                  "Cancelled",
                  "Postponed"
                ],
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/CinemaQueue/{id}/priority": {
      "patch": {
        "tags": [
          "CinemaQueue"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/CinemaQueue/statistics": {
      "get": {
        "tags": [
          "CinemaQueue"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaQueueStatisticsOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaQueueStatisticsOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CinemaQueueStatisticsOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/CinemaQueue/metadata": {
      "get": {
        "tags": [
          "CinemaQueue"
        ],
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MediaMetadataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaMetadataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaMetadataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Commands/user": {
      "get": {
        "tags": [
          "Commands"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Commands/admin": {
      "get": {
        "tags": [
          "Commands"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Commands/user/platform/{platform}": {
      "get": {
        "tags": [
          "Commands"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "None",
                "Api",
                "Telegram",
                "Twitch",
                "Discord",
                "Vk",
                "All"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringArrayOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringArrayOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringArrayOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Commands/admin/platform/{platform}": {
      "get": {
        "tags": [
          "Commands"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "None",
                "Api",
                "Telegram",
                "Twitch",
                "Discord",
                "Vk",
                "All"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringArrayOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringArrayOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringArrayOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Commands/user/platform/{platform}/info": {
      "get": {
        "tags": [
          "Commands"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "None",
                "Api",
                "Telegram",
                "Twitch",
                "Discord",
                "Vk",
                "All"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommandInfoArrayOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandInfoArrayOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandInfoArrayOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Commands/admin/platform/{platform}/info": {
      "get": {
        "tags": [
          "Commands"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "None",
                "Api",
                "Telegram",
                "Twitch",
                "Discord",
                "Vk",
                "All"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommandInfoArrayOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandInfoArrayOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandInfoArrayOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Commands/{commandName}/parameters": {
      "get": {
        "tags": [
          "Commands"
        ],
        "parameters": [
          {
            "name": "commandName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommandParameterInfoArrayOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandParameterInfoArrayOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandParameterInfoArrayOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Commands/{commandName}/execute": {
      "post": {
        "tags": [
          "Commands"
        ],
        "parameters": [
          {
            "name": "commandName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Framedata/characters": {
      "get": {
        "tags": [
          "Framedata"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TekkenCharacterListOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekkenCharacterListOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekkenCharacterListOperationResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Framedata"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TekkenCharacter"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TekkenCharacter"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TekkenCharacter"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TekkenCharacterOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekkenCharacterOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekkenCharacterOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Framedata/characters/{name}": {
      "get": {
        "tags": [
          "Framedata"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TekkenCharacterOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekkenCharacterOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekkenCharacterOperationResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Framedata"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TekkenCharacter"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TekkenCharacter"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TekkenCharacter"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TekkenCharacterOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekkenCharacterOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekkenCharacterOperationResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Framedata"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Framedata/characters/{characterName}/moves": {
      "get": {
        "tags": [
          "Framedata"
        ],
        "parameters": [
          {
            "name": "characterName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MoveListOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveListOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveListOperationResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Framedata"
        ],
        "parameters": [
          {
            "name": "characterName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Move"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Move"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Move"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MoveOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Framedata/characters/{characterName}/moves/{command}": {
      "get": {
        "tags": [
          "Framedata"
        ],
        "parameters": [
          {
            "name": "characterName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MoveOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveOperationResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Framedata"
        ],
        "parameters": [
          {
            "name": "characterName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Move"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Move"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Move"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MoveOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveOperationResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Framedata"
        ],
        "parameters": [
          {
            "name": "characterName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Framedata/moves/search": {
      "get": {
        "tags": [
          "Framedata"
        ],
        "parameters": [
          {
            "name": "characterName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stanceCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "heatEngage",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "powerCrush",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isThrow",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "homing",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MoveListOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveListOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveListOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Framedata/characters/{name}/image": {
      "get": {
        "tags": [
          "Framedata"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Framedata/characters/{name}/avatar": {
      "get": {
        "tags": [
          "Framedata"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Framedata/characters/{name}/fullbody": {
      "get": {
        "tags": [
          "Framedata"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Framedata/parse": {
      "post": {
        "tags": [
          "Framedata"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ParseRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ParseRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ParseRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParseResultOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParseResultOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParseResultOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Framedata/parse-characters-only": {
      "post": {
        "tags": [
          "Framedata"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ParseRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ParseRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ParseRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParseResultOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParseResultOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParseResultOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Framedata/supplement": {
      "post": {
        "tags": [
          "Framedata"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SupplementRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SupplementRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SupplementRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParseResultOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParseResultOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParseResultOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Framedata/supplement/{source}": {
      "post": {
        "tags": [
          "Framedata"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "None",
                "Wavu",
                "Tekkendocs"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParseResultOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParseResultOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParseResultOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/FramedataChanges/pending/characters": {
      "get": {
        "tags": [
          "FramedataChanges"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TekkenCharacterPendingDtoListOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekkenCharacterPendingDtoListOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekkenCharacterPendingDtoListOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/FramedataChanges/pending/moves": {
      "get": {
        "tags": [
          "FramedataChanges"
        ],
        "parameters": [
          {
            "name": "characterName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MovePendingDtoListOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MovePendingDtoListOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MovePendingDtoListOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/FramedataChanges/approve/character/{name}": {
      "post": {
        "tags": [
          "FramedataChanges"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/FramedataChanges/reject/character/{name}": {
      "post": {
        "tags": [
          "FramedataChanges"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/FramedataChanges/approve/move/{characterName}/{command}": {
      "post": {
        "tags": [
          "FramedataChanges"
        ],
        "parameters": [
          {
            "name": "characterName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/FramedataChanges/reject/move/{characterName}/{command}": {
      "post": {
        "tags": [
          "FramedataChanges"
        ],
        "parameters": [
          {
            "name": "characterName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/FramedataChanges/approve/all": {
      "post": {
        "tags": [
          "FramedataChanges"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/FramedataChanges/reject/all": {
      "post": {
        "tags": [
          "FramedataChanges"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/FramedataChanges/scrape": {
      "post": {
        "tags": [
          "FramedataChanges"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/FramedataChanges/stats": {
      "get": {
        "tags": [
          "FramedataChanges"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Honkai/users": {
      "get": {
        "tags": [
          "Honkai"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DailyAutoMarkupUserListOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyAutoMarkupUserListOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyAutoMarkupUserListOperationResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Honkai"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateUserRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateUserRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateUserRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DailyAutoMarkupUserOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyAutoMarkupUserOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyAutoMarkupUserOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Honkai/users/{id}": {
      "get": {
        "tags": [
          "Honkai"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DailyAutoMarkupUserOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyAutoMarkupUserOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyAutoMarkupUserOperationResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Honkai"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateUserRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateUserRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateUserRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DailyAutoMarkupUserOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyAutoMarkupUserOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyAutoMarkupUserOperationResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Honkai"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Honkai/users/{id}/redeem-now": {
      "post": {
        "tags": [
          "Honkai"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Honkai/stats": {
      "get": {
        "tags": [
          "Honkai"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/KeyboardHook/status": {
      "get": {
        "tags": [
          "KeyboardHook"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/KeyboardHook/combinations": {
      "get": {
        "tags": [
          "KeyboardHook"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/KeyboardHook/info": {
      "get": {
        "tags": [
          "KeyboardHook"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/LoggerTest/test-logging": {
      "post": {
        "tags": [
          "LoggerTest"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/LoggerTest/test-exception": {
      "post": {
        "tags": [
          "LoggerTest"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/LoggerTest/test-structured": {
      "post": {
        "tags": [
          "LoggerTest"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Logs": {
      "get": {
        "tags": [
          "Logs"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "whenlogged"
            }
          },
          {
            "name": "sortDescending",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "logLevel",
            "in": "query",
            "schema": {
              "enum": [
                "Trace",
                "Debug",
                "Information",
                "Warning",
                "Error",
                "Critical",
                "None"
              ],
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LogResponseOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogResponseOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogResponseOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Logs/by-level/{logLevel}": {
      "get": {
        "tags": [
          "Logs"
        ],
        "parameters": [
          {
            "name": "logLevel",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "Trace",
                "Debug",
                "Information",
                "Warning",
                "Error",
                "Critical",
                "None"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LogIEnumerableOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogIEnumerableOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogIEnumerableOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Logs/by-date-range": {
      "get": {
        "tags": [
          "Logs"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LogIEnumerableOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogIEnumerableOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogIEnumerableOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Logs/recent": {
      "get": {
        "tags": [
          "Logs"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LogIEnumerableOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogIEnumerableOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogIEnumerableOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Logs/statistics": {
      "get": {
        "tags": [
          "Logs"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LogsStatisticsOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogsStatisticsOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogsStatisticsOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Logs/test": {
      "post": {
        "tags": [
          "Logs"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/MediaInfoApi": {
      "get": {
        "tags": [
          "MediaInfoApi"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMediaInfoListOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMediaInfoListOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMediaInfoListOperationResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MediaInfoApi"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiMediaInfo"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiMediaInfo"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiMediaInfo"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMediaInfoOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMediaInfoOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMediaInfoOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/MediaInfoApi/{id}": {
      "get": {
        "tags": [
          "MediaInfoApi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMediaInfoOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMediaInfoOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMediaInfoOperationResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MediaInfoApi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiMediaInfo"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiMediaInfo"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiMediaInfo"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMediaInfoOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMediaInfoOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMediaInfoOperationResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MediaInfoApi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/MediaInfoApi/{id}/file": {
      "get": {
        "tags": [
          "MediaInfoApi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/memory/{escapedFileName}": {
      "get": {
        "tags": [
          "PyroAlerts"
        ],
        "parameters": [
          {
            "name": "escapedFileName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/RandomMeme/types": {
      "get": {
        "tags": [
          "RandomMeme"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemeTypeDtoListOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeTypeDtoListOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeTypeDtoListOperationResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RandomMeme"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateMemeTypeDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateMemeTypeDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateMemeTypeDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemeTypeDtoOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeTypeDtoOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeTypeDtoOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/RandomMeme/types/{id}": {
      "get": {
        "tags": [
          "RandomMeme"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemeTypeDtoOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeTypeDtoOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeTypeDtoOperationResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "RandomMeme"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateMemeTypeDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateMemeTypeDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateMemeTypeDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemeTypeDtoOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeTypeDtoOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeTypeDtoOperationResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RandomMeme"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/RandomMeme/orders": {
      "get": {
        "tags": [
          "RandomMeme"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemeOrderDtoListOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeOrderDtoListOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeOrderDtoListOperationResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RandomMeme"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateMemeOrderDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateMemeOrderDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateMemeOrderDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemeOrderDtoOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeOrderDtoOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeOrderDtoOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/RandomMeme/orders/type/{typeId}": {
      "get": {
        "tags": [
          "RandomMeme"
        ],
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemeOrderDtoListOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeOrderDtoListOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeOrderDtoListOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/RandomMeme/orders/{id}": {
      "get": {
        "tags": [
          "RandomMeme"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemeOrderDtoOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeOrderDtoOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeOrderDtoOperationResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "RandomMeme"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateMemeOrderDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateMemeOrderDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateMemeOrderDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemeOrderDtoOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeOrderDtoOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeOrderDtoOperationResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RandomMeme"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/RandomMeme/random": {
      "get": {
        "tags": [
          "RandomMeme"
        ],
        "parameters": [
          {
            "name": "typeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemeOrderDtoOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeOrderDtoOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemeOrderDtoOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/RandomMeme/count": {
      "get": {
        "tags": [
          "RandomMeme"
        ],
        "parameters": [
          {
            "name": "typeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/RandomMeme/file/{id}": {
      "get": {
        "tags": [
          "RandomMeme"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/RandomMeme/file/random": {
      "get": {
        "tags": [
          "RandomMeme"
        ],
        "parameters": [
          {
            "name": "typeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/RandomMeme/orders/reorder/{typeId}": {
      "post": {
        "tags": [
          "RandomMeme"
        ],
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/RxdcodxViewers/all": {
      "get": {
        "tags": [
          "RxdcodxViewers"
        ],
        "parameters": [
          {
            "name": "forceUseCash",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FollowerInfoListOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowerInfoListOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowerInfoListOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/RxdcodxViewers/without-avatars": {
      "get": {
        "tags": [
          "RxdcodxViewers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FollowerInfoListOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowerInfoListOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowerInfoListOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/RxdcodxViewers/without-avatars/count": {
      "get": {
        "tags": [
          "RxdcodxViewers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/RxdcodxViewers/update-avatars": {
      "post": {
        "tags": [
          "RxdcodxViewers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/RxdcodxViewers/debug/avatars": {
      "get": {
        "tags": [
          "RxdcodxViewers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/ServiceManager/status": {
      "get": {
        "tags": [
          "ServiceManager"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringServiceStatusDictionaryOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringServiceStatusDictionaryOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringServiceStatusDictionaryOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/ServiceManager/service/{serviceName}": {
      "get": {
        "tags": [
          "ServiceManager"
        ],
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceInfoOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceInfoOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceInfoOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/ServiceManager/service/{serviceName}/start": {
      "post": {
        "tags": [
          "ServiceManager"
        ],
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/ServiceManager/service/{serviceName}/stop": {
      "post": {
        "tags": [
          "ServiceManager"
        ],
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/ServiceManager/service/{serviceName}/restart": {
      "post": {
        "tags": [
          "ServiceManager"
        ],
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/ServiceManager/service/{serviceName}/logs": {
      "get": {
        "tags": [
          "ServiceManager"
        ],
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLogIEnumerableOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLogIEnumerableOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLogIEnumerableOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/ServiceManager/service/{serviceName}/active": {
      "post": {
        "tags": [
          "ServiceManager"
        ],
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean"
              }
            },
            "text/json": {
              "schema": {
                "type": "boolean"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "boolean"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/ServiceManager/services": {
      "get": {
        "tags": [
          "ServiceManager"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceInfoIEnumerableOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceInfoIEnumerableOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceInfoIEnumerableOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/ShikimoriRateLimiter/info": {
      "get": {
        "tags": [
          "ShikimoriRateLimiter"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimiterInfoOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimiterInfoOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimiterInfoOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/SoundRequest/state": {
      "get": {
        "tags": [
          "SoundRequest"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerStateOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerStateOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerStateOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/SoundRequest/queue": {
      "get": {
        "tags": [
          "SoundRequest"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseTrackInfoListOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseTrackInfoListOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseTrackInfoListOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/SoundRequest/history": {
      "get": {
        "tags": [
          "SoundRequest"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseTrackInfoListOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseTrackInfoListOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseTrackInfoListOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/SoundRequest/play": {
      "post": {
        "tags": [
          "SoundRequest"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/SoundRequest/pause": {
      "post": {
        "tags": [
          "SoundRequest"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/SoundRequest/toggle-play-pause": {
      "post": {
        "tags": [
          "SoundRequest"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/SoundRequest/stop": {
      "post": {
        "tags": [
          "SoundRequest"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/SoundRequest/skip": {
      "post": {
        "tags": [
          "SoundRequest"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/SoundRequest/play-next": {
      "post": {
        "tags": [
          "SoundRequest"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/SoundRequest/play-track/{trackId}": {
      "post": {
        "tags": [
          "SoundRequest"
        ],
        "parameters": [
          {
            "name": "trackId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/SoundRequest/volume/{volume}": {
      "post": {
        "tags": [
          "SoundRequest"
        ],
        "parameters": [
          {
            "name": "volume",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/SoundRequest/mute/{muted}": {
      "post": {
        "tags": [
          "SoundRequest"
        ],
        "parameters": [
          {
            "name": "muted",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/SoundRequest/toggle-mute": {
      "post": {
        "tags": [
          "SoundRequest"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/SoundRequest/add-track": {
      "post": {
        "tags": [
          "SoundRequest"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/SoundRequest/add-playlist": {
      "post": {
        "tags": [
          "SoundRequest"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/SoundRequest/queue/{trackId}": {
      "delete": {
        "tags": [
          "SoundRequest"
        ],
        "parameters": [
          {
            "name": "trackId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/SoundRequest/current-song": {
      "get": {
        "tags": [
          "SoundRequest"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/SoundRequest/user-position/{userId}": {
      "get": {
        "tags": [
          "SoundRequest"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/StreamArchive": {
      "get": {
        "tags": [
          "StreamArchive"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StreamArchiveConfigListOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamArchiveConfigListOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamArchiveConfigListOperationResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StreamArchive"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StreamArchiveConfig"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StreamArchiveConfig"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StreamArchiveConfig"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StreamArchiveConfigOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamArchiveConfigOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamArchiveConfigOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/StreamArchive/{id}": {
      "get": {
        "tags": [
          "StreamArchive"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StreamArchiveConfigOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamArchiveConfigOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamArchiveConfigOperationResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "StreamArchive"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StreamArchiveConfig"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StreamArchiveConfig"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StreamArchiveConfig"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StreamArchive"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/StreamArchive/validate-folder": {
      "post": {
        "tags": [
          "StreamArchive"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ValidateFolderRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ValidateFolderRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ValidateFolderRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateFolderResponseOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateFolderResponseOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateFolderResponseOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/StreamArchive/{configId}/files": {
      "get": {
        "tags": [
          "StreamArchive"
        ],
        "parameters": [
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/StreamArchive/statistics": {
      "get": {
        "tags": [
          "StreamArchive"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/TestLogger/test-warning": {
      "post": {
        "tags": [
          "TestLogger"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/TestLogger/test-error": {
      "post": {
        "tags": [
          "TestLogger"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/TestLogger/test-critical": {
      "post": {
        "tags": [
          "TestLogger"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/TwitchUserAuth": {
      "get": {
        "tags": [
          "Twitch"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/twitch/rewards": {
      "get": {
        "tags": [
          "TwitchRewards"
        ],
        "parameters": [
          {
            "name": "onlyManageable",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomRewardsResponseOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomRewardsResponseOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomRewardsResponseOperationResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TwitchRewards"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateCustomRewardsRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateCustomRewardsRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateCustomRewardsRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRewardOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRewardOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRewardOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/twitch/rewards/{rewardId}": {
      "patch": {
        "tags": [
          "TwitchRewards"
        ],
        "parameters": [
          {
            "name": "rewardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCustomRewardRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCustomRewardRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCustomRewardRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRewardOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRewardOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRewardOperationResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TwitchRewards"
        ],
        "parameters": [
          {
            "name": "rewardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/twitch/rewards/{rewardId}/redemptions": {
      "get": {
        "tags": [
          "TwitchRewards"
        ],
        "parameters": [
          {
            "name": "rewardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "UNFULFILLED"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomRewardRedemptionResponseOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomRewardRedemptionResponseOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomRewardRedemptionResponseOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/twitch/rewards/{rewardId}/redemptions/status": {
      "post": {
        "tags": [
          "TwitchRewards"
        ],
        "parameters": [
          {
            "name": "rewardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCustomRewardRedemptionStatusRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCustomRewardRedemptionStatusRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCustomRewardRedemptionStatusRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiMediaInfo": {
        "required": [
          "fileInfo",
          "id",
          "metaInfo",
          "positionInfo",
          "stylesInfo",
          "textInfo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "textInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaTextInfo"
              }
            ]
          },
          "fileInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaFileInfo"
              }
            ]
          },
          "positionInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaPositionInfo"
              }
            ]
          },
          "metaInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaMetaInfo"
              }
            ]
          },
          "stylesInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaStylesInfo"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ApiMediaInfoListOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа ApiMediaInfo[]",
        "x-generic-type-argument": "ApiMediaInfo[]"
      },
      "ApiMediaInfoOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа ApiMediaInfo",
        "x-generic-type-argument": "ApiMediaInfo"
      },
      "AutoMessageDto": {
        "required": [
          "id",
          "message"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "message": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AutoMessageDtoIEnumerableOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа AutoMessageDto[]",
        "x-generic-type-argument": "AutoMessageDto[]"
      },
      "AutoMessageDtoOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа AutoMessageDto",
        "x-generic-type-argument": "AutoMessageDto"
      },
      "BaseTrackInfo": {
        "required": [
          "duration",
          "id",
          "isDeleted",
          "lastTimePlays",
          "title",
          "trackName",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "trackName": {
            "type": "string"
          },
          "authors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "duration": {
            "type": "string",
            "format": "date-span"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "lastTimePlays": {
            "type": "string",
            "format": "date-time"
          },
          "artworkUrl": {
            "type": "string",
            "nullable": true
          },
          "videoId": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "queueOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "requestedByTwitchId": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "requestedByTwitchUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TwitchUser"
              }
            ],
            "nullable": true
          },
          "title": {
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BaseTrackInfoListOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа BaseTrackInfo[]",
        "x-generic-type-argument": "BaseTrackInfo[]"
      },
      "ChannelRewardDefinition": {
        "required": [
          "cost",
          "isEnabled",
          "isGlobalCooldownEnabled",
          "isMaxPerStreamEnabled",
          "isMaxPerUserPerStreamEnabled",
          "isUserInputRequired",
          "shouldRedemptionsSkipRequestQueue",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "cost": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "prompt": {
            "type": "string",
            "nullable": true
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          },
          "isUserInputRequired": {
            "type": "boolean"
          },
          "isMaxPerStreamEnabled": {
            "type": "boolean"
          },
          "maxPerStream": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isMaxPerUserPerStreamEnabled": {
            "type": "boolean"
          },
          "maxPerUserPerStream": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isGlobalCooldownEnabled": {
            "type": "boolean"
          },
          "globalCooldownSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shouldRedemptionsSkipRequestQueue": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ChannelRewardRecord": {
        "required": [
          "cost",
          "id",
          "isDeleted",
          "isEnabled",
          "isGlobalCooldownEnabled",
          "isMaxPerStreamEnabled",
          "isMaxPerUserPerStreamEnabled",
          "isUserInputRequired",
          "shouldRedemptionsSkipRequestQueue",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "cost": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "prompt": {
            "type": "string",
            "nullable": true
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          },
          "isUserInputRequired": {
            "type": "boolean"
          },
          "isMaxPerStreamEnabled": {
            "type": "boolean"
          },
          "maxPerStream": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isMaxPerUserPerStreamEnabled": {
            "type": "boolean"
          },
          "maxPerUserPerStream": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isGlobalCooldownEnabled": {
            "type": "boolean"
          },
          "globalCooldownSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shouldRedemptionsSkipRequestQueue": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "twitchRewardId": {
            "type": "string",
            "nullable": true
          },
          "mediaInfoId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChannelRewardRecordIEnumerableOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа ChannelRewardRecord[]",
        "x-generic-type-argument": "ChannelRewardRecord[]"
      },
      "ChannelRewardRecordOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа ChannelRewardRecord",
        "x-generic-type-argument": "ChannelRewardRecord"
      },
      "CinemaMediaItem": {
        "required": [
          "createdAt",
          "id",
          "isNext",
          "mediaUrl",
          "priority",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "mediaUrl": {
            "maxLength": 1000,
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "enum": [
              "Pending",
              "InProgress",
              "Completed",
              "Cancelled",
              "Postponed"
            ],
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "scheduledFor": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "twitchUserId": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "twitchUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TwitchUser"
              }
            ],
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "isNext": {
            "type": "boolean"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CinemaMediaItemDto": {
        "required": [
          "createdAt",
          "id",
          "isNext",
          "mediaUrl",
          "priority",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "mediaUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "Pending",
              "InProgress",
              "Completed",
              "Cancelled",
              "Postponed"
            ],
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "scheduledFor": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "type": "string",
            "nullable": true
          },
          "twitchUserId": {
            "type": "string",
            "nullable": true
          },
          "twitchUsername": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "isNext": {
            "type": "boolean"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CinemaMediaItemDtoListOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа CinemaMediaItemDto[]",
        "x-generic-type-argument": "CinemaMediaItemDto[]"
      },
      "CinemaMediaItemDtoOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа CinemaMediaItemDto",
        "x-generic-type-argument": "CinemaMediaItemDto"
      },
      "CinemaQueueStatistics": {
        "required": [
          "cancelledItems",
          "completedItems",
          "inProgressItems",
          "pendingItems",
          "postponedItems",
          "totalItems"
        ],
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pendingItems": {
            "type": "integer",
            "format": "int32"
          },
          "inProgressItems": {
            "type": "integer",
            "format": "int32"
          },
          "completedItems": {
            "type": "integer",
            "format": "int32"
          },
          "cancelledItems": {
            "type": "integer",
            "format": "int32"
          },
          "postponedItems": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CinemaQueueStatisticsOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа CinemaQueueStatistics",
        "x-generic-type-argument": "CinemaQueueStatistics"
      },
      "CommandInfo": {
        "required": [
          "availablePlatforms",
          "description",
          "isAdminCommand",
          "name",
          "parameters",
          "visibility"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isAdminCommand": {
            "type": "boolean"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommandParameterInfo"
            }
          },
          "availablePlatforms": {
            "type": "array",
            "items": {
              "enum": [
                "None",
                "Api",
                "Telegram",
                "Twitch",
                "Discord",
                "Vk",
                "All"
              ],
              "type": "string"
            }
          },
          "visibility": {
            "enum": [
              "None",
              "FullList",
              "ShortList",
              "All"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CommandInfoArrayOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа CommandInfo[]",
        "x-generic-type-argument": "CommandInfo[]"
      },
      "CommandParameterInfo": {
        "required": [
          "description",
          "name",
          "required",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommandParameterInfoArrayOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа CommandParameterInfo[]",
        "x-generic-type-argument": "CommandParameterInfo[]"
      },
      "CreateAutoMessageRequest": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateCustomRewardsRequest": {
        "required": [
          "cost",
          "isEnabled",
          "isGlobalCooldownEnabled",
          "isMaxPerStreamEnabled",
          "isMaxPerUserPerStreamEnabled",
          "isUserInputRequired",
          "shouldRedemptionsSkipRequestQueue"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "prompt": {
            "type": "string",
            "nullable": true
          },
          "cost": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          },
          "isUserInputRequired": {
            "type": "boolean"
          },
          "isMaxPerStreamEnabled": {
            "type": "boolean"
          },
          "maxPerStream": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isMaxPerUserPerStreamEnabled": {
            "type": "boolean"
          },
          "maxPerUserPerStream": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isGlobalCooldownEnabled": {
            "type": "boolean"
          },
          "globalCooldownSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shouldRedemptionsSkipRequestQueue": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateMediaItemRequest": {
        "required": [
          "mediaUrl",
          "priority"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "mediaUrl": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "scheduledFor": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "type": "string",
            "nullable": true
          },
          "twitchUserId": {
            "type": "string",
            "nullable": true
          },
          "twitchUsername": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateMemeOrderDto": {
        "required": [
          "filePath"
        ],
        "type": "object",
        "properties": {
          "filePath": {
            "minLength": 1,
            "type": "string"
          },
          "memeTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateMemeTypeDto": {
        "required": [
          "folderPath",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "folderPath": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateUserRequest": {
        "required": [
          "ltmidV2",
          "lTokenV2",
          "ltuidV2"
        ],
        "type": "object",
        "properties": {
          "twitchId": {
            "type": "string",
            "nullable": true
          },
          "telegramId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ltmidV2": {
            "type": "string"
          },
          "lTokenV2": {
            "type": "string"
          },
          "ltuidV2": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CustomReward": {
        "required": [
          "cost",
          "isEnabled",
          "isInStock",
          "isPaused",
          "isUserInputRequired",
          "shouldRedemptionsSkipQueue"
        ],
        "type": "object",
        "properties": {
          "broadcasterId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "broadcasterLogin": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "broadcasterName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "prompt": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "cost": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "image": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Image"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "defaultImage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DefaultImage"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isEnabled": {
            "type": "boolean",
            "readOnly": true
          },
          "isUserInputRequired": {
            "type": "boolean",
            "readOnly": true
          },
          "maxPerStreamSetting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxPerStreamSetting"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "maxPerUserPerStreamSetting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxPerUserPerStreamSetting"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "globalCooldownSetting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GlobalCooldownSetting"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "isPaused": {
            "type": "boolean",
            "readOnly": true
          },
          "isInStock": {
            "type": "boolean",
            "readOnly": true
          },
          "shouldRedemptionsSkipQueue": {
            "type": "boolean",
            "readOnly": true
          },
          "redemptionsRedeemedCurrentStream": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "cooldownExpiresAt": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomRewardOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа CustomReward",
        "x-generic-type-argument": "CustomReward"
      },
      "DailyAutoMarkupUser": {
        "required": [
          "id",
          "lastAutoMarkup",
          "ltmidV2",
          "lTokenV2",
          "ltuidV2"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "twitchId": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "twitchUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TwitchUser"
              }
            ],
            "nullable": true
          },
          "telegramId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ltmidV2": {
            "type": "string"
          },
          "lTokenV2": {
            "type": "string"
          },
          "ltuidV2": {
            "type": "string"
          },
          "lastAutoMarkup": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "DailyAutoMarkupUserListOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа DailyAutoMarkupUser[]",
        "x-generic-type-argument": "DailyAutoMarkupUser[]"
      },
      "DailyAutoMarkupUserOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа DailyAutoMarkupUser",
        "x-generic-type-argument": "DailyAutoMarkupUser"
      },
      "DefaultImage": {
        "type": "object",
        "properties": {
          "url1x": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "url2x": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "url4x": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FollowerInfo": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "minLength": 1,
            "type": "string"
          },
          "twitchUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TwitchUser"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FollowerInfoListOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа FollowerInfo[]",
        "x-generic-type-argument": "FollowerInfo[]"
      },
      "FumoUser": {
        "required": [
          "lastTime",
          "twitchId"
        ],
        "type": "object",
        "properties": {
          "twitchId": {
            "minLength": 1,
            "type": "string"
          },
          "twitchUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TwitchUser"
              }
            ],
            "nullable": true
          },
          "lastTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "GetCustomRewardRedemptionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewardRedemption"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetCustomRewardRedemptionResponseOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа GetCustomRewardRedemptionResponse",
        "x-generic-type-argument": "GetCustomRewardRedemptionResponse"
      },
      "GetCustomRewardsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomReward"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetCustomRewardsResponseOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа GetCustomRewardsResponse",
        "x-generic-type-argument": "GetCustomRewardsResponse"
      },
      "GlobalCooldownSetting": {
        "required": [
          "globalCooldownSeconds",
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean",
            "readOnly": true
          },
          "globalCooldownSeconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "HelloVideosUsers": {
        "required": [
          "id",
          "lastTimeNotif",
          "mediaInfo",
          "mediaInfoId",
          "twitchId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "twitchId": {
            "minLength": 1,
            "type": "string"
          },
          "twitchUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TwitchUser"
              }
            ],
            "nullable": true
          },
          "lastTimeNotif": {
            "type": "string",
            "format": "date-time"
          },
          "mediaInfoId": {
            "type": "string",
            "format": "uuid"
          },
          "mediaInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaInfo"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Image": {
        "type": "object",
        "properties": {
          "url1x": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "url2x": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "url4x": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Int32OperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа number",
        "x-generic-type-argument": "number"
      },
      "Log": {
        "required": [
          "id",
          "logLevel",
          "message",
          "whenLogged"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "whenLogged": {
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "type": "string"
          },
          "stackTrace": {
            "type": "string",
            "nullable": true
          },
          "logLevel": {
            "enum": [
              "Trace",
              "Debug",
              "Information",
              "Warning",
              "Error",
              "Critical",
              "None"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LogIEnumerableOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа Log[]",
        "x-generic-type-argument": "Log[]"
      },
      "LogResponse": {
        "required": [
          "logs",
          "page",
          "pageSize",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Log"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LogResponseOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа LogResponse",
        "x-generic-type-argument": "LogResponse"
      },
      "LogsStatistics": {
        "required": [
          "criticalLogs",
          "errorLogs",
          "totalLogs",
          "warningLogs"
        ],
        "type": "object",
        "properties": {
          "totalLogs": {
            "type": "integer",
            "format": "int32"
          },
          "warningLogs": {
            "type": "integer",
            "format": "int32"
          },
          "errorLogs": {
            "type": "integer",
            "format": "int32"
          },
          "criticalLogs": {
            "type": "integer",
            "format": "int32"
          },
          "oldestLogDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "newestLogDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogsStatisticsOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа LogsStatistics",
        "x-generic-type-argument": "LogsStatistics"
      },
      "MaxPerStreamSetting": {
        "required": [
          "isEnabled",
          "maxPerStream"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean",
            "readOnly": true
          },
          "maxPerStream": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MaxPerUserPerStreamSetting": {
        "required": [
          "isEnabled",
          "maxPerUserPerStream"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean",
            "readOnly": true
          },
          "maxPerUserPerStream": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MediaFileInfo": {
        "required": [
          "extension",
          "fileName",
          "filePath",
          "isLocalFile",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "None",
              "Image",
              "Audio",
              "Video",
              "TelegramSticker",
              "Voice",
              "Gif"
            ],
            "type": "string"
          },
          "filePath": {
            "type": "string"
          },
          "isLocalFile": {
            "type": "boolean"
          },
          "fileName": {
            "type": "string"
          },
          "extension": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MediaInfo": {
        "required": [
          "fileInfo",
          "id",
          "metaInfo",
          "positionInfo",
          "stylesInfo",
          "textInfo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "textInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaTextInfo"
              }
            ]
          },
          "fileInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaFileInfo"
              }
            ]
          },
          "positionInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaPositionInfo"
              }
            ]
          },
          "metaInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaMetaInfo"
              }
            ]
          },
          "stylesInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaStylesInfo"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "MediaMetaInfo": {
        "required": [
          "displayName",
          "duration",
          "isLooped",
          "priority",
          "twitchPointsCost",
          "vip",
          "volume"
        ],
        "type": "object",
        "properties": {
          "twitchPointsCost": {
            "type": "integer",
            "format": "int32"
          },
          "twitchGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "vip": {
            "type": "boolean"
          },
          "displayName": {
            "type": "string"
          },
          "isLooped": {
            "type": "boolean"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "priority": {
            "enum": [
              "Low",
              "Normal",
              "High"
            ],
            "type": "string"
          },
          "volume": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MediaMetadata": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "sourceUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MediaMetadataOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа MediaMetadata",
        "x-generic-type-argument": "MediaMetadata"
      },
      "MediaPositionInfo": {
        "required": [
          "height",
          "isHorizontalCenter",
          "isProportion",
          "isResizeRequires",
          "isRotated",
          "isUseOriginalWidthAndHeight",
          "isVerticallCenter",
          "randomCoordinates",
          "rotation",
          "width",
          "xCoordinate",
          "yCoordinate"
        ],
        "type": "object",
        "properties": {
          "isProportion": {
            "type": "boolean"
          },
          "isResizeRequires": {
            "type": "boolean"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "isRotated": {
            "type": "boolean"
          },
          "rotation": {
            "type": "integer",
            "format": "int32"
          },
          "xCoordinate": {
            "type": "integer",
            "format": "int32"
          },
          "yCoordinate": {
            "type": "integer",
            "format": "int32"
          },
          "randomCoordinates": {
            "type": "boolean"
          },
          "isVerticallCenter": {
            "type": "boolean"
          },
          "isHorizontalCenter": {
            "type": "boolean"
          },
          "isUseOriginalWidthAndHeight": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MediaStylesInfo": {
        "required": [
          "isBorder"
        ],
        "type": "object",
        "properties": {
          "isBorder": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MediaTextInfo": {
        "type": "object",
        "properties": {
          "keyWordsColor": {
            "type": "string",
            "nullable": true
          },
          "triggerWord": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "textColor": {
            "type": "string",
            "nullable": true
          },
          "keyWordSybmolDelimiter": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemeOrderDto": {
        "required": [
          "filePath",
          "id",
          "order"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "filePath": {
            "minLength": 1,
            "type": "string"
          },
          "memeTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MemeTypeDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemeOrderDtoListOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа MemeOrderDto[]",
        "x-generic-type-argument": "MemeOrderDto[]"
      },
      "MemeOrderDtoOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа MemeOrderDto",
        "x-generic-type-argument": "MemeOrderDto"
      },
      "MemeTypeDto": {
        "required": [
          "folderPath",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "folderPath": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MemeTypeDtoListOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа MemeTypeDto[]",
        "x-generic-type-argument": "MemeTypeDto[]"
      },
      "MemeTypeDtoOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа MemeTypeDto",
        "x-generic-type-argument": "MemeTypeDto"
      },
      "Move": {
        "required": [
          "characterName",
          "command",
          "heatBurst",
          "heatEngage",
          "heatSmash",
          "homing",
          "isFromStance",
          "powerCrush",
          "requiresHeat",
          "stanceCode",
          "throw",
          "tornado"
        ],
        "type": "object",
        "properties": {
          "characterName": {
            "type": "string"
          },
          "command": {
            "type": "string"
          },
          "isFromStance": {
            "type": "boolean",
            "readOnly": true
          },
          "stanceCode": {
            "type": "string"
          },
          "stanceName": {
            "type": "string",
            "nullable": true
          },
          "heatEngage": {
            "type": "boolean"
          },
          "heatSmash": {
            "type": "boolean"
          },
          "powerCrush": {
            "type": "boolean"
          },
          "throw": {
            "type": "boolean"
          },
          "homing": {
            "type": "boolean"
          },
          "tornado": {
            "type": "boolean"
          },
          "heatBurst": {
            "type": "boolean"
          },
          "requiresHeat": {
            "type": "boolean"
          },
          "hitLevel": {
            "type": "string",
            "nullable": true
          },
          "damage": {
            "type": "string",
            "nullable": true
          },
          "startUpFrame": {
            "type": "string",
            "nullable": true
          },
          "blockFrame": {
            "type": "string",
            "nullable": true
          },
          "hitFrame": {
            "type": "string",
            "nullable": true
          },
          "counterHitFrame": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MoveListOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа Move[]",
        "x-generic-type-argument": "Move[]"
      },
      "MoveOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа Move",
        "x-generic-type-argument": "Move"
      },
      "MovePending": {
        "required": [
          "characterName",
          "command",
          "heatBurst",
          "heatEngage",
          "heatSmash",
          "homing",
          "isFromStance",
          "powerCrush",
          "requiresHeat",
          "stanceCode",
          "throw",
          "tornado"
        ],
        "type": "object",
        "properties": {
          "characterName": {
            "type": "string"
          },
          "command": {
            "type": "string"
          },
          "isFromStance": {
            "type": "boolean",
            "readOnly": true
          },
          "stanceCode": {
            "type": "string"
          },
          "stanceName": {
            "type": "string",
            "nullable": true
          },
          "heatEngage": {
            "type": "boolean"
          },
          "heatSmash": {
            "type": "boolean"
          },
          "powerCrush": {
            "type": "boolean"
          },
          "throw": {
            "type": "boolean"
          },
          "homing": {
            "type": "boolean"
          },
          "tornado": {
            "type": "boolean"
          },
          "heatBurst": {
            "type": "boolean"
          },
          "requiresHeat": {
            "type": "boolean"
          },
          "hitLevel": {
            "type": "string",
            "nullable": true
          },
          "damage": {
            "type": "string",
            "nullable": true
          },
          "startUpFrame": {
            "type": "string",
            "nullable": true
          },
          "blockFrame": {
            "type": "string",
            "nullable": true
          },
          "hitFrame": {
            "type": "string",
            "nullable": true
          },
          "counterHitFrame": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MovePendingDto": {
        "required": [
          "characterName",
          "command",
          "heatBurst",
          "heatEngage",
          "heatSmash",
          "homing",
          "isFromStance",
          "isNew",
          "powerCrush",
          "requiresHeat",
          "stanceCode",
          "throw",
          "tornado"
        ],
        "type": "object",
        "properties": {
          "characterName": {
            "type": "string"
          },
          "command": {
            "type": "string"
          },
          "isFromStance": {
            "type": "boolean",
            "readOnly": true
          },
          "stanceCode": {
            "type": "string"
          },
          "stanceName": {
            "type": "string",
            "nullable": true
          },
          "heatEngage": {
            "type": "boolean"
          },
          "heatSmash": {
            "type": "boolean"
          },
          "powerCrush": {
            "type": "boolean"
          },
          "throw": {
            "type": "boolean"
          },
          "homing": {
            "type": "boolean"
          },
          "tornado": {
            "type": "boolean"
          },
          "heatBurst": {
            "type": "boolean"
          },
          "requiresHeat": {
            "type": "boolean"
          },
          "hitLevel": {
            "type": "string",
            "nullable": true
          },
          "damage": {
            "type": "string",
            "nullable": true
          },
          "startUpFrame": {
            "type": "string",
            "nullable": true
          },
          "blockFrame": {
            "type": "string",
            "nullable": true
          },
          "hitFrame": {
            "type": "string",
            "nullable": true
          },
          "counterHitFrame": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isNew": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MovePendingDtoListOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа MovePendingDto[]",
        "x-generic-type-argument": "MovePendingDto[]"
      },
      "ObjectOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа any",
        "x-generic-type-argument": "any"
      },
      "OperationResult": {
        "required": [
          "success"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Флаг успешности операции"
          },
          "message": {
            "type": "string",
            "description": "Сообщение о результате операции",
            "nullable": true
          },
          "data": {
            "description": "Данные результата операции",
            "nullable": true,
            "x-generic-type": "TData"
          }
        },
        "additionalProperties": false,
        "description": "Обобщенный результат операции",
        "x-is-generic": true,
        "x-generic-parameters": [
          "TData"
        ]
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ParseRequest": {
        "required": [
          "source"
        ],
        "type": "object",
        "properties": {
          "source": {
            "enum": [
              "None",
              "Wavu",
              "Tekkendocs"
            ],
            "type": "string"
          },
          "characterNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "requestDelaySeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "characterDelaySeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "useStagingService": {
            "type": "boolean",
            "nullable": true
          },
          "parseMoves": {
            "type": "boolean",
            "nullable": true
          },
          "maxRetries": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "httpTimeoutSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParseResult": {
        "required": [
          "message",
          "parsedCharacters",
          "success"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "parsedCharacters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "message": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ParseResultOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа ParseResult",
        "x-generic-type-argument": "ParseResult"
      },
      "PlayerState": {
        "required": [
          "id",
          "isMuted",
          "state",
          "volume"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "currentTrackId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "nextTrackId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "currentTrackDuration": {
            "type": "string",
            "format": "date-span",
            "nullable": true
          },
          "state": {
            "enum": [
              "Stopped",
              "Playing",
              "Paused",
              "SwitchingTrack",
              "WaitingForTrack"
            ],
            "type": "string"
          },
          "isMuted": {
            "type": "boolean"
          },
          "volume": {
            "type": "integer",
            "format": "int32"
          },
          "currentTrackRequestedBy": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "currentTrackRequestedByTwitchUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TwitchUser"
              }
            ],
            "nullable": true
          },
          "currentTrack": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseTrackInfo"
              }
            ],
            "nullable": true
          },
          "nextTrack": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseTrackInfo"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PlayerStateOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа PlayerState",
        "x-generic-type-argument": "PlayerState"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "RateLimiterInfo": {
        "required": [
          "availablePerMinute",
          "availablePerSecond",
          "timeToResetMinute",
          "timeToResetSecond"
        ],
        "type": "object",
        "properties": {
          "availablePerSecond": {
            "type": "integer",
            "format": "int32"
          },
          "availablePerMinute": {
            "type": "integer",
            "format": "int32"
          },
          "timeToResetSecond": {
            "type": "string",
            "format": "date-span"
          },
          "timeToResetMinute": {
            "type": "string",
            "format": "date-span"
          }
        },
        "additionalProperties": false
      },
      "RateLimiterInfoOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа RateLimiterInfo",
        "x-generic-type-argument": "RateLimiterInfo"
      },
      "Reward": {
        "required": [
          "cost"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "prompt": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "cost": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RewardRedemption": {
        "required": [
          "redeemedAt",
          "status"
        ],
        "type": "object",
        "properties": {
          "broadcasterId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "broadcasterLogin": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "broadcasterName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "userId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "userLogin": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "userName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "userInput": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "enum": [
              "UNFULFILLED",
              "FULFILLED",
              "CANCELED"
            ],
            "type": "string",
            "readOnly": true
          },
          "redeemedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "reward": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Reward"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ServiceInfo": {
        "required": [
          "description",
          "displayName",
          "isEnabled",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "enum": [
              "Running",
              "Stopped",
              "Starting",
              "Stopping",
              "Error",
              "Unknown"
            ],
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastActivity": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ServiceInfoIEnumerableOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа ServiceInfo[]",
        "x-generic-type-argument": "ServiceInfo[]"
      },
      "ServiceInfoOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа ServiceInfo",
        "x-generic-type-argument": "ServiceInfo"
      },
      "ServiceLog": {
        "required": [
          "level",
          "message",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "level": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "exception": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceLogIEnumerableOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа ServiceLog[]",
        "x-generic-type-argument": "ServiceLog[]"
      },
      "StreamArchiveConfig": {
        "required": [
          "checkSpan",
          "fileConvertType",
          "fileNameFormat",
          "folderPath",
          "id",
          "isConvertFile",
          "telegramChannelId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "telegramChannelId": {
            "type": "integer",
            "format": "int64"
          },
          "fileNameFormat": {
            "type": "string"
          },
          "checkSpan": {
            "type": "string",
            "format": "date-span"
          },
          "folderPath": {
            "type": "string"
          },
          "isConvertFile": {
            "type": "boolean"
          },
          "fileConvertType": {
            "enum": [
              "None",
              "Mp4",
              "Webm",
              "Mkv",
              "Avi",
              "Mov"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "StreamArchiveConfigListOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа StreamArchiveConfig[]",
        "x-generic-type-argument": "StreamArchiveConfig[]"
      },
      "StreamArchiveConfigOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа StreamArchiveConfig",
        "x-generic-type-argument": "StreamArchiveConfig"
      },
      "StringArrayOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа string[]",
        "x-generic-type-argument": "string[]"
      },
      "StringOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа string",
        "x-generic-type-argument": "string"
      },
      "StringServiceStatusDictionaryOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа object",
        "x-generic-type-argument": "object"
      },
      "SupplementRequest": {
        "required": [
          "source"
        ],
        "type": "object",
        "properties": {
          "source": {
            "enum": [
              "None",
              "Wavu",
              "Tekkendocs"
            ],
            "type": "string"
          },
          "requestDelaySeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "characterDelaySeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "useStagingService": {
            "type": "boolean",
            "nullable": true
          },
          "parseMoves": {
            "type": "boolean",
            "nullable": true
          },
          "maxRetries": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "httpTimeoutSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TekkenCharacter": {
        "required": [
          "displayName",
          "lastUpdateTime",
          "name",
          "pageUrl"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "displayName": {
            "type": "string",
            "readOnly": true
          },
          "linkToImage": {
            "maxLength": 300,
            "type": "string",
            "nullable": true
          },
          "pageUrl": {
            "maxLength": 200,
            "type": "string"
          },
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "imageExtension": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "avatarImage": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "avatarImageExtension": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "fullBodyImage": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "fullBodyImageExtension": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "movelist": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Move"
            },
            "nullable": true
          },
          "lastUpdateTime": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "strengths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "weaknesess": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TekkenCharacterListOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа TekkenCharacter[]",
        "x-generic-type-argument": "TekkenCharacter[]"
      },
      "TekkenCharacterOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа TekkenCharacter",
        "x-generic-type-argument": "TekkenCharacter"
      },
      "TekkenCharacterPendingDto": {
        "required": [
          "isNew",
          "lastUpdateTime",
          "name",
          "pageUrl"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "linkToImage": {
            "maxLength": 300,
            "type": "string",
            "nullable": true
          },
          "pageUrl": {
            "maxLength": 200,
            "type": "string"
          },
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "imageExtension": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "avatarImage": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "avatarImageExtension": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "fullBodyImage": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "fullBodyImageExtension": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "movelist": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MovePending"
            },
            "nullable": true
          },
          "lastUpdateTime": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "strengths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "weaknesess": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isNew": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TekkenCharacterPendingDtoListOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа TekkenCharacterPendingDto[]",
        "x-generic-type-argument": "TekkenCharacterPendingDto[]"
      },
      "TwitchLeaderboardUser": {
        "required": [
          "russianRouletteWins",
          "russianRouletteWinsWithWaifu",
          "tekkenVictorinaWins",
          "tekkenVictorinaWinsWithWaifu",
          "totalWins",
          "triviaWins",
          "triviaWinsWithWaifus",
          "twitchId"
        ],
        "type": "object",
        "properties": {
          "twitchId": {
            "minLength": 1,
            "type": "string"
          },
          "twitchUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TwitchUser"
              }
            ],
            "nullable": true
          },
          "totalWins": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "tekkenVictorinaWins": {
            "type": "integer",
            "format": "int32"
          },
          "tekkenVictorinaWinsWithWaifu": {
            "type": "integer",
            "format": "int32"
          },
          "russianRouletteWins": {
            "type": "integer",
            "format": "int32"
          },
          "russianRouletteWinsWithWaifu": {
            "type": "integer",
            "format": "int32"
          },
          "triviaWins": {
            "type": "integer",
            "format": "int32"
          },
          "triviaWinsWithWaifus": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TwitchUser": {
        "required": [
          "cinemaQueueItems",
          "createdAt",
          "displayName",
          "helloVideos",
          "honkaiMarkups",
          "isJustFollower",
          "isModerator",
          "isVip",
          "lastUpdated",
          "playerStates",
          "requestedTracks",
          "twitchId",
          "userLogin"
        ],
        "type": "object",
        "properties": {
          "twitchId": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "userLogin": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "displayName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "profileImageUrl": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "chatColor": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "isModerator": {
            "type": "boolean"
          },
          "isVip": {
            "type": "boolean"
          },
          "followedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "leaderboardStats": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TwitchLeaderboardUser"
              }
            ],
            "nullable": true
          },
          "fumoUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FumoUser"
              }
            ],
            "nullable": true
          },
          "helloVideos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloVideosUsers"
            }
          },
          "waifuRollGuarantee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WaifuRollGuarantee"
              }
            ],
            "nullable": true
          },
          "honkaiMarkups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DailyAutoMarkupUser"
            }
          },
          "cinemaQueueItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CinemaMediaItem"
            }
          },
          "requestedTracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseTrackInfo"
            }
          },
          "playerStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerState"
            }
          },
          "isJustFollower": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAutoMessageRequest": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCustomRewardDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "cost": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "prompt": {
            "type": "string",
            "nullable": true
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          },
          "isUserInputRequired": {
            "type": "boolean",
            "nullable": true
          },
          "isMaxPerStreamEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "maxPerStream": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isMaxPerUserPerStreamEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "maxPerUserPerStream": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isGlobalCooldownEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "globalCooldownSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shouldRedemptionsSkipRequestQueue": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCustomRewardRedemptionStatusRequest": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "UNFULFILLED",
              "FULFILLED",
              "CANCELED"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateCustomRewardRequest": {
        "type": "object",
        "properties": {
          "broadcasterId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "prompt": {
            "type": "string",
            "nullable": true
          },
          "cost": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          },
          "isUserInputRequired": {
            "type": "boolean",
            "nullable": true
          },
          "isMaxPerStreamEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "maxPerStream": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isMaxPerUserPerStreamEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "maxPerUserPerStream": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isGlobalCooldownEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "globalCooldownSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isPaused": {
            "type": "boolean",
            "nullable": true
          },
          "shouldRedemptionsSkipRequestQueue": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateMediaItemRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "mediaUrl": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "enum": [
              "Pending",
              "InProgress",
              "Completed",
              "Cancelled",
              "Postponed"
            ],
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "scheduledFor": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "isNext": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateMemeOrderDto": {
        "required": [
          "filePath",
          "order"
        ],
        "type": "object",
        "properties": {
          "filePath": {
            "minLength": 1,
            "type": "string"
          },
          "memeTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "order": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateMemeTypeDto": {
        "required": [
          "folderPath",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "folderPath": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "twitchId": {
            "type": "string",
            "nullable": true
          },
          "telegramId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ltmidV2": {
            "type": "string",
            "nullable": true
          },
          "lTokenV2": {
            "type": "string",
            "nullable": true
          },
          "ltuidV2": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateFolderRequest": {
        "required": [
          "folderPath"
        ],
        "type": "object",
        "properties": {
          "folderPath": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ValidateFolderResponse": {
        "required": [
          "accessible",
          "exists",
          "sampleFiles",
          "videoFilesCount"
        ],
        "type": "object",
        "properties": {
          "exists": {
            "type": "boolean"
          },
          "accessible": {
            "type": "boolean"
          },
          "videoFilesCount": {
            "type": "integer",
            "format": "int32"
          },
          "sampleFiles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "ValidateFolderResponseOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "Результат операции с данными типа ValidateFolderResponse",
        "x-generic-type-argument": "ValidateFolderResponse"
      },
      "WaifuRollGuarantee": {
        "required": [
          "createdAt",
          "lastRoll",
          "rollCount",
          "twitchId",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "twitchId": {
            "type": "string"
          },
          "twitchUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TwitchUser"
              }
            ],
            "nullable": true
          },
          "rollCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastRoll": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      }
    }
  }
}