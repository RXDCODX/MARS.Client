import {
  Box,
  Button,
  Flex,
  FormControl,
  FormErrorMessage,
  FormLabel,
  Grid,
  Heading,
  Input,
  Select,
  Text,
  Textarea,
  useToast,
  VStack,
} from "@chakra-ui/react";
import { useState } from "react";

const ContactsPage = () => {
  const toast = useToast();
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    subject: "",
    message: "",
    category: "",
  });
  const [errors, setErrors] = useState<Record<string, string>>({});
  const [isSubmitting, setIsSubmitting] = useState(false);

  const contactMethods = [
    {
      icon: "üìß",
      title: "Email",
      description: "–û—Å–Ω–æ–≤–Ω–æ–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏",
      value: "info@mars-project.com",
      action: "–ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ",
    },
    {
      icon: "üí¨",
      title: "Discord",
      description: "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É —Å–µ—Ä–≤–µ—Ä—É",
      value: "@mars-project",
      action: "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è",
    },
    {
      icon: "üêô",
      title: "GitHub",
      description: "–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –∏ issues",
      value: "github.com/mars-project",
      action: "–ü–µ—Ä–µ–π—Ç–∏",
    },
    {
      icon: "üìñ",
      title: "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è",
      description: "–ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞",
      value: "docs.mars-project.com",
      action: "–ò–∑—É—á–∏—Ç—å",
    },
  ];

  const faqItems = [
    {
      question: "–ö–∞–∫ –Ω–∞—á–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å MARS?",
      answer:
        "–ù–∞—á–Ω–∏—Ç–µ —Å –∏–∑—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏, –∑–∞—Ç–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–∞–∑–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –∏—Ö –ø–æ–¥ —Å–≤–æ–∏ –Ω—É–∂–¥—ã.",
    },
    {
      question: "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ –º–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è?",
      answer:
        "–î–∞, –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å MARS –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–¥–∞–ø—Ç–∏–≤–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö.",
    },
    {
      question: "–ú–æ–∂–Ω–æ –ª–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã?",
      answer:
        "–ö–æ–Ω–µ—á–Ω–æ! MARS –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç API –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π.",
    },
    {
      question: "–ï—Å—Ç—å –ª–∏ –ø–ª–∞—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è?",
      answer: "–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è MARS –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–µ–Ω –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.",
    },
  ];

  const handleInputChange = (
    e: React.ChangeEvent<
      HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement
    >
  ) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));

    // Clear error when user starts typing
    if (errors[name]) {
      setErrors(prev => ({ ...prev, [name]: "" }));
    }
  };

  const validateForm = () => {
    const newErrors: Record<string, string> = {};

    if (!formData.name.trim()) {
      newErrors.name = "–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è";
    }

    if (!formData.email.trim()) {
      newErrors.email = "Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è";
    } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(formData.email)) {
      newErrors.email = "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email";
    }

    if (!formData.subject.trim()) {
      newErrors.subject = "–¢–µ–º–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è";
    }

    if (!formData.message.trim()) {
      newErrors.message = "–°–æ–æ–±—â–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è";
    }

    if (!formData.category) {
      newErrors.category = "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é";
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    if (!validateForm()) {
      return;
    }

    setIsSubmitting(true);

    try {
      // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
      await new Promise(resolve => setTimeout(resolve, 2000));

      toast({
        title: "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!",
        description: "–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
        status: "success",
        duration: 5000,
        isClosable: true,
      });

      // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
      setFormData({
        name: "",
        email: "",
        subject: "",
        message: "",
        category: "",
      });
    } catch (error) {
      toast({
        title: "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏",
        description: "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–∑–∂–µ.",
        status: "error",
        duration: 5000,
        isClosable: true,
      });
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <Box p={8} bg="white" minH="100vh">
      <VStack gap={16} align="stretch">
        {/* Hero Section */}
        <Box textAlign="center" py={12}>
          <VStack gap={8}>
            <Text fontSize="6xl" fontWeight="bold">
              üìû
            </Text>
            <Heading as="h1" size="2xl" color="gray.800">
              –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏
            </Heading>
            <Text fontSize="xl" color="gray.600" maxW="2xl">
              –£ –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ MARS? –•–æ—Ç–∏—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∏–¥–µ—è–º–∏ –∏–ª–∏ —Å–æ–æ–±—â–∏—Ç—å
              –æ–± –æ—à–∏–±–∫–µ? –ú—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –∏ –≤—ã—Å–ª—É—à–∞—Ç—å –≤–∞—à–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.
            </Text>
          </VStack>
        </Box>

        {/* Contact Methods Grid */}
        <Box>
          <Heading
            as="h2"
            size="xl"
            color="gray.800"
            textAlign="center"
            mb={12}
          >
            –°–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏
          </Heading>
          <Grid
            templateColumns={{
              base: "1fr",
              md: "repeat(2, 1fr)",
              lg: "repeat(4, 1fr)",
            }}
            gap={6}
          >
            {contactMethods.map((method, index) => (
              <Box
                key={index}
                p={6}
                bg="gray.50"
                borderRadius="xl"
                border="1px solid"
                borderColor="gray.200"
                textAlign="center"
                transition="all 0.3s ease"
                _hover={{
                  transform: "translateY(-4px)",
                  boxShadow: "lg",
                }}
              >
                <VStack gap={4}>
                  <Text
                    fontSize="4xl"
                    filter="drop-shadow(0 2px 4px rgba(0,0,0,0.1))"
                  >
                    {method.icon}
                  </Text>
                  <Heading as="h3" size="md" color="gray.800">
                    {method.title}
                  </Heading>
                  <Text color="gray.600" fontSize="sm">
                    {method.description}
                  </Text>
                  <Text fontWeight="semibold" color="blue.600" fontSize="sm">
                    {method.value}
                  </Text>
                  <Button
                    size="sm"
                    variant="outline"
                    colorScheme="blue"
                    _hover={{ bg: "blue.500", color: "white" }}
                  >
                    {method.action}
                  </Button>
                </VStack>
              </Box>
            ))}
          </Grid>
        </Box>

        {/* Contact Form and FAQ */}
        <Grid templateColumns={{ base: "1fr", lg: "1fr 1fr" }} gap={12}>
          {/* Contact Form */}
          <Box>
            <Heading as="h2" size="xl" color="gray.800" mb={8}>
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
            </Heading>
            <Box
              as="form"
              onSubmit={handleSubmit}
              p={6}
              bg="gray.50"
              borderRadius="xl"
              border="1px solid"
              borderColor="gray.200"
            >
              <VStack gap={6}>
                <FormControl isInvalid={!!errors.name}>
                  <FormLabel>–ò–º—è *</FormLabel>
                  <Input
                    name="name"
                    value={formData.name}
                    onChange={handleInputChange}
                    placeholder="–í–∞—à–µ –∏–º—è"
                    bg="white"
                    borderColor="gray.300"
                    _focus={{
                      borderColor: "blue.500",
                      boxShadow: "0 0 0 1px blue.500",
                    }}
                  />
                  <FormErrorMessage>{errors.name}</FormErrorMessage>
                </FormControl>

                <FormControl isInvalid={!!errors.email}>
                  <FormLabel>Email *</FormLabel>
                  <Input
                    name="email"
                    type="email"
                    value={formData.email}
                    onChange={handleInputChange}
                    placeholder="your@email.com"
                    bg="white"
                    borderColor="gray.300"
                    _focus={{
                      borderColor: "blue.500",
                      boxShadow: "0 0 0 1px blue.500",
                    }}
                  />
                  <FormErrorMessage>{errors.email}</FormErrorMessage>
                </FormControl>

                <FormControl isInvalid={!!errors.category}>
                  <FormLabel>–ö–∞—Ç–µ–≥–æ—Ä–∏—è *</FormLabel>
                  <Select
                    name="category"
                    value={formData.category}
                    onChange={handleInputChange}
                    placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é"
                    bg="white"
                    borderColor="gray.300"
                    _focus={{
                      borderColor: "blue.500",
                      boxShadow: "0 0 0 1px blue.500",
                    }}
                  >
                    <option value="general">–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã</option>
                    <option value="technical">–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</option>
                    <option value="feature">–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π</option>
                    <option value="bug">–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ</option>
                    <option value="partnership">–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ</option>
                  </Select>
                  <FormErrorMessage>{errors.category}</FormErrorMessage>
                </FormControl>

                <FormControl isInvalid={!!errors.subject}>
                  <FormLabel>–¢–µ–º–∞ *</FormLabel>
                  <Input
                    name="subject"
                    value={formData.subject}
                    onChange={handleInputChange}
                    placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞"
                    bg="white"
                    borderColor="gray.300"
                    _focus={{
                      borderColor: "blue.500",
                      boxShadow: "0 0 0 1px blue.500",
                    }}
                  />
                  <FormErrorMessage>{errors.subject}</FormErrorMessage>
                </FormControl>

                <FormControl isInvalid={!!errors.message}>
                  <FormLabel>–°–æ–æ–±—â–µ–Ω–∏–µ *</FormLabel>
                  <Textarea
                    name="message"
                    value={formData.message}
                    onChange={handleInputChange}
                    placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ..."
                    rows={6}
                    bg="white"
                    borderColor="gray.300"
                    _focus={{
                      borderColor: "blue.500",
                      boxShadow: "0 0 0 1px blue.500",
                    }}
                  />
                  <FormErrorMessage>{errors.message}</FormErrorMessage>
                </FormControl>

                <Button
                  type="submit"
                  colorScheme="blue"
                  size="lg"
                  w="full"
                  isLoading={isSubmitting}
                  loadingText="–û—Ç–ø—Ä–∞–≤–∫–∞..."
                >
                  –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
                </Button>
              </VStack>
            </Box>
          </Box>

          {/* FAQ Section */}
          <Box>
            <Heading as="h2" size="xl" color="gray.800" mb={8}>
              –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
            </Heading>
            <VStack gap={4} align="stretch">
              {faqItems.map((item, index) => (
                <Box
                  key={index}
                  p={6}
                  bg="gray.50"
                  borderRadius="xl"
                  border="1px solid"
                  borderColor="gray.200"
                  transition="all 0.3s ease"
                  _hover={{
                    transform: "translateX(4px)",
                    boxShadow: "md",
                  }}
                >
                  <VStack gap={3} align="stretch">
                    <Heading as="h3" size="md" color="gray.800">
                      {item.question}
                    </Heading>
                    <Text color="gray.600" fontSize="sm">
                      {item.answer}
                    </Text>
                  </VStack>
                </Box>
              ))}
            </VStack>
          </Box>
        </Grid>

        {/* Additional Info */}
        <Box
          p={8}
          bg="blue.50"
          borderRadius="xl"
          border="1px solid"
          borderColor="blue.200"
          textAlign="center"
        >
          <VStack gap={6}>
            <Heading as="h2" size="xl" color="blue.800">
              –ù—É–∂–Ω–∞ —Å—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å?
            </Heading>
            <Text fontSize="lg" color="blue.700" maxW="2xl">
              –î–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –∏–ª–∏ —Å—Ä–æ—á–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Discord
              —Å–µ—Ä–≤–µ—Ä. –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –æ–±—ã—á–Ω–æ –æ—Ç–≤–µ—á–∞–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —á–∞—Å–æ–≤.
            </Text>
            <Button
              size="lg"
              colorScheme="blue"
              variant="solid"
              _hover={{ transform: "translateY(-2px)", boxShadow: "lg" }}
            >
              üöÄ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ Discord
            </Button>
          </VStack>
        </Box>
      </VStack>
    </Box>
  );
};

export default ContactsPage;
